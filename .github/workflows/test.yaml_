name: Golden Image Pipeline Openstack

on:
#  push:
#    branches:
#      - master
  workflow_dispatch:
    inputs:
      #images_list:
      #  # TODO: Switch to multiple choice when the feature is implemented:
      #  # https://github.com/actions/runner/issues/2076
      #  description: JSON Array of images to build, eg. ["ubuntu-18.04", "ubuntu-22.04"]
      #  required: true
      #  type: string
      #  default: '[ "ubuntu-22.04" ]'
      #scan_with_nessus:
      #  description: Trigger instance scanning by Nessus
      #  required: false
      #  default: true
      #  type: boolean
permissions:
  id-token: write
  contents: read

jobs:
  openstack-sip:
    runs-on: ubuntu-2204
    #runs-on: pure-iss
    #runs-on: sip-dev-runner
    #outputs:
      #image_name: ${{ matrix.image }}
      #downstream: ${{ steps.extract-data.outputs.ami_id }}
    #strategy:
    #  fail-fast: false
    #  matrix:
    #    image: ${{ fromJson(inputs.images_list) }}
    steps:
      - uses: actions/checkout@v3

      - name: Runner info
        run: |
          set -x
          cat /etc/os-release
          lsb_release -a
          df -h
          free -h
          pwd
          egrep -c '(vmx|svm)' /proc/cpuinfo || true
          ip address
          python --version || true
          python2 --version || true
          python3 --version || true
          #ls -ld /tmp
          #sudo chmod 1777 /tmp
          #ls -ld /tmp
          #sudo rm -rf /tmp/*
          

      #- name: Qemu kvm installing
      #  run: |
      #    set -x
      #    apt update -y
      #    #apt install -y qemu qemu-kvm libvirt-daemon libvirt-clients bridge-utils virt-manager
      #    apt install -y qemu-system-x86 qemu-system libvirt-clients libvirt-daemon-system uml-utilities screen bridge-utils virtinst libvirt-daemon openssh-server


      #- name: Setup Python
      #  uses: actions/setup-python@v4
      #  with:
      #    python-version: "3.11"

      #- name: Install pbr
      #  run: pip install pbr

      - name: diskimage-builder
        run: |
          set -x
        
          sudo apt-get update
          sudo apt-get install tox podman
          git clone https://opendev.org/openstack/diskimage-builder
          #apt install git
          #git clone https://opendev.org/openstack/diskimage-builder
          cd diskimage-builder
          tox -e bindep
          sudo apt-get install apt-transport-https debootstrap gnupg2 inetutils-ping kpartx qemu-utils rpm -y
          tox -e bindep
          
          sudo tox -e venv -- disk-image-create rocky-container vm


          

      